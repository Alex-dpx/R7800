# Name of assembly file containing libgcc1 functions.
# This entry must be present, but it can be empty if the target does
# not need any assembler functions to support its code generation.
CROSS_LIBGCC1 =

# Alternatively if assembler functions *are* needed then define the
# entries below:
# CROSS_LIBGCC1 = libgcc1-asm.a

LIB2FUNCS_EXTRA = \
	$(srcdir)/config/udivmodsi4.c \
	$(srcdir)/config/divmod.c \
	$(srcdir)/config/udivmod.c

# If any special flags are necessary when building libgcc2 put them here.
#
# TARGET_LIBGCC2_CFLAGS = 

# We want fine grained libraries, so use the new code to build the
# floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT'				> fp-bit.c
	cat $(srcdir)/config/fp-bit.c			>> fp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	cat $(srcdir)/config/fp-bit.c > dp-bit.c

# Commented out to speed up compiler development!
#
# MULTILIB_OPTIONS = march=ubicom32v1/march=ubicom32v2/march=ubicom32v3/march=ubicom32v4
# MULTILIB_DIRNAMES = ubicom32v1 ubicom32v2 ubicom32v3 ubicom32v4

MULTILIB_OPTIONS = march=ubicom32v3/march=ubicom32v4
MULTILIB_OPTIONS += mfdpic
MULTILIB_OPTIONS += mno-ipos-abi/mipos-abi
MULTILIB_OPTIONS += fno-leading-underscore/fleading-underscore

# Assemble startup files.
$(T)crti.o: $(srcdir)/config/ubicom32/crti.S $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/ubicom32/crti.S

$(T)crtn.o: $(srcdir)/config/ubicom32/crtn.S $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/ubicom32/crtn.S

# these parts are required because uClibc ldso needs them to link.
# they are not in the specfile so they will not be included automatically.
EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crtbeginS.o crtendS.o crti.o crtn.o
